name: Manualize & Freeze TikTok (PR)

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  patch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: |
          npm init -y
          npm i js-yaml

      - name: Patch workflows in .github/workflows
        id: patch
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const path = require('path');
          const yaml = require('js-yaml');

          const dir = '.github/workflows';
          const allow = new Set(['workflow-audit.yml','mcp-dispatcher.yml','manualize-and-freeze.yml']);
          if (!fs.existsSync(dir)) { console.log('No workflows dir'); process.exit(0); }

          const files = fs.readdirSync(dir).filter(f => f.endsWith('.yml') || f.endsWith('.yaml'));
          let changed = [];
          for (const f of files) {
            if (allow.has(f)) continue;
            const p = path.join(dir, f);
            let doc = yaml.load(fs.readFileSync(p,'utf8'));
            if (!doc || typeof doc !== 'object') continue;

            // 1) 统一添加环境门禁（默认禁用自动触发 & 禁用 TikTok）
            doc.env = Object.assign({ ENABLED_AUTO: 'false', ENABLE_TIKTOK: 'false' }, doc.env || {});

            // 2) 确保存在 workflow_dispatch（保留结构完整，便于手动触发）
            doc.on = doc.on || {};
            if (Array.isArray(doc.on)) {
              const o = {};
              for (const ev of doc.on) o[ev] = null;
              doc.on = o;
            }
            if (!doc.on.workflow_dispatch) {
              doc.on.workflow_dispatch = {
                inputs: {
                  run_mode: { description: 'test | full', required: false, default: 'test' }
                }
              };
            }

            // 3) 为每个 job 添加门禁：仅在 workflow_dispatch 或显式开启 ENABLED_AUTO 时运行
            if (doc.jobs && typeof doc.jobs === 'object') {
              for (const [jname, job] of Object.entries(doc.jobs)) {
                const gate = "${{ github.event_name == 'workflow_dispatch' || env.ENABLED_AUTO == 'true' }}";
                if (job.if) {
                  job.if = `${job.if} && (${gate.slice(3,-2)})`;
                } else {
                  job.if = gate;
                }

                // 3.1 在每个 job 起始插入说明步骤，避免误会
                job.steps = job.steps || [];
                job.steps.unshift({
                  name: "NOTE: Auto triggers disabled during testing; set env.ENABLED_AUTO='true' to re-enable",
                  run: "echo Auto triggers disabled; only workflow_dispatch runs."
                });

                // 4) 冻结所有 TikTok 相关步骤（按名称/命令/uses 模糊匹配）
                for (const step of job.steps) {
                  const name = (step.name || '') + ' ' + (step.id || '');
                  const text = name + ' ' + (step.uses || '') + ' ' + (step.run || '');
                  if (/tiktok/i.test(text)) {
                    step.if = "${{ env.ENABLE_TIKTOK == 'true' }}";
                  }
                }

                doc.jobs[jname] = job;
              }
            }

            fs.writeFileSync(p, yaml.dump(doc, { lineWidth: 140 }));
            changed.push(f);
          }

          fs.mkdirSync('automation-test', { recursive: true });
          fs.writeFileSync('automation-test/manualize-summary.txt', changed.join('\n'));
          console.log('Changed:', changed);
          NODE

      - name: Create PR with modifications
        uses: peter-evans/create-pull-request@v6
        with:
          branch: MCP-Safe-Test
          title: "CI: manualize workflows & freeze TikTok by default"
          body: |
            This PR was generated by MCP:
            - Add `workflow_dispatch` to all workflows for manual runs.
            - Gate all jobs: only run on `workflow_dispatch` or when `env.ENABLED_AUTO='true'`.
            - Freeze TikTok-related steps behind `env.ENABLE_TIKTOK` (default false) and add a NOTE step.
            - Provide testing-friendly inputs (`run_mode`).
            To re-enable auto triggers, set `ENABLED_AUTO=true` at workflow/job level.
          commit-message: "ci: manualize workflows & freeze TikTok by default"
          add-paths: |
            .github/workflows/*.yml
            automation-test/manualize-summary.txt